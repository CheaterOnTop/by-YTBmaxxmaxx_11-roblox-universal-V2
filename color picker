local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")

-- Fonctions utilitaires
local function Create(Name, Properties, Children)
    local Object = Instance.new(Name)
    for i, v in next, Properties or {} do
        Object[i] = v
    end
    for i, v in next, Children or {} do
        v.Parent = Object
    end
    return Object
end

local function SetProps(Element, Props)
    table.foreach(Props, function(Property, Value)
        Element[Property] = Value
    end)
    return Element
end

local function SetChildren(Element, Children)
    table.foreach(Children, function(_, Child)
        Child.Parent = Element
    end)
    return Element
end

local function ReturnProperty(Object)
    if Object:IsA("Frame") or Object:IsA("TextButton") then
        return "BackgroundColor3"
    end 
    if Object:IsA("ScrollingFrame") then
        return "ScrollBarImageColor3"
    end 
    if Object:IsA("UIStroke") then
        return "Color"
    end 
    if Object:IsA("TextLabel") or Object:IsA("TextBox") then
        return "TextColor3"
    end   
    if Object:IsA("ImageLabel") or Object:IsA("ImageButton") then
        return "ImageColor3"
    end   
end

local ThemeObjects = { Main = {}, Second = {}, Stroke = {}, Text = {} }

local function AddThemeObject(Object, Type)
    if not ThemeObjects[Type] then
        ThemeObjects[Type] = {}
    end    
    table.insert(ThemeObjects[Type], Object)
    Object[ReturnProperty(Object)] = _G.XyloKitUI.CurrentTheme[Type] or _G.XyloKitUI.CurrentTheme.MainBackground
    return Object
end

local function PackColor(Color)
    return {R = Color.R * 255, G = Color.G * 255, B = Color.B * 255}
end    

local function UnpackColor(Color)
    return Color3.fromRGB(Color.R, Color.G, Color.B)
end

local function CreateColorpicker(section, ColorpickerConfig)
    ColorpickerConfig = ColorpickerConfig or {}
    ColorpickerConfig.Name = ColorpickerConfig.Name or "Colorpicker"
    ColorpickerConfig.Default = ColorpickerConfig.Default or Color3.fromRGB(255,255,255)
    ColorpickerConfig.Callback = ColorpickerConfig.Callback or function() end
    ColorpickerConfig.Flag = ColorpickerConfig.Flag or nil
    ColorpickerConfig.Save = ColorpickerConfig.Save or false

    local ColorH, ColorS, ColorV = 1, 1, 1
    local Colorpicker = {Value = ColorpickerConfig.Default, Toggled = false, Type = "Colorpicker", Save = ColorpickerConfig.Save}

    local ColorSelection = Create("ImageLabel", {
        Size = UDim2.new(0, 18, 0, 18),
        Position = UDim2.new(select(3, Color3.toHSV(Colorpicker.Value))),
        ScaleType = Enum.ScaleType.Fit,
        AnchorPoint = Vector2.new(0.5, 0.5),
        BackgroundTransparency = 1,
        Image = "http://www.roblox.com/asset/?id=4805639000"
    })

    local HueSelection = Create("ImageLabel", {
        Size = UDim2.new(0, 18, 0, 18),
        Position = UDim2.new(0.5, 0, 1 - select(1, Color3.toHSV(Colorpicker.Value))),
        ScaleType = Enum.ScaleType.Fit,
        AnchorPoint = Vector2.new(0.5, 0.5),
        BackgroundTransparency = 1,
        Image = "http://www.roblox.com/asset/?id=4805639000"
    })

    local Color = Create("ImageLabel", {
        Size = UDim2.new(1, -25, 1, 0),
        Visible = false,
        Image = "rbxassetid://4155801252"
    }, {
        Create("UICorner", {CornerRadius = UDim.new(0, 5)}),
        ColorSelection
    })

    local Hue = Create("Frame", {
        Size = UDim2.new(0, 20, 1, 0),
        Position = UDim2.new(1, -20, 0, 0),
        Visible = false
    }, {
        Create("UIGradient", {Rotation = 270, Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 4)), ColorSequenceKeypoint.new(0.20, Color3.fromRGB(234, 255, 0)), ColorSequenceKeypoint.new(0.40, Color3.fromRGB(21, 255, 0)), ColorSequenceKeypoint.new(0.60, Color3.fromRGB(0, 255, 255)), ColorSequenceKeypoint.new(0.80, Color3.fromRGB(0, 17, 255)), ColorSequenceKeypoint.new(0.90, Color3.fromRGB(255, 0, 251)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 4))}}),
        Create("UICorner", {CornerRadius = UDim.new(0, 5)}),
        HueSelection
    })

    local ColorpickerContainer = Create("Frame", {
        Position = UDim2.new(0, 0, 0, 32),
        Size = UDim2.new(1, 0, 1, -32),
        BackgroundTransparency = 1,
        ClipsDescendants = true
    }, {
        Hue,
        Color,
        Create("UIPadding", {
            PaddingLeft = UDim.new(0, 35),
            PaddingRight = UDim.new(0, 35),
            PaddingBottom = UDim.new(0, 10),
            PaddingTop = UDim.new(0, 17)
        })
    })

    local Click = SetProps(Create("TextButton", {Text = ""}), {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        BorderSizePixel = 0
    })

    local ColorpickerBox = AddThemeObject(SetChildren(SetProps(Create("Frame", {BackgroundColor3 = Color3.fromRGB(255, 255, 255), BorderSizePixel = 0}), {
        Size = UDim2.new(0, 24, 0, 24),
        Position = UDim2.new(1, -12, 0.5, 0),
        AnchorPoint = Vector2.new(1, 0.5)
    }, {
        Create("UICorner", {CornerRadius = UDim.new(0, 4)})
    }), {
        AddThemeObject(Create("UIStroke", {Thickness = 1}), "Stroke")
    }), "Main")

    local ColorpickerFrame = AddThemeObject(SetChildren(SetProps(Create("Frame", {BackgroundColor3 = Color3.fromRGB(255, 255, 255), BorderSizePixel = 0}), {
        Size = UDim2.new(1, 0, 0, 38),
        Parent = section.Frame:FindFirstChild("ScrollingFrame")
    }, {
        Create("UICorner", {CornerRadius = UDim.new(0, 5)})
    }), {
        SetProps(SetChildren(Create("Frame", {BackgroundTransparency = 1}), {
            AddThemeObject(SetProps(Create("TextLabel", {Text = ColorpickerConfig.Name, TextSize = 15}), {
                Size = UDim2.new(1, -12, 1, 0),
                Position = UDim2.new(0, 12, 0, 0),
                Font = Enum.Font.GothamBold,
                BackgroundTransparency = 1,
                TextXAlignment = Enum.TextXAlignment.Left,
                Name = "Content"
            }), "Text"),
            ColorpickerBox,
            Click,
            AddThemeObject(SetProps(Create("Frame"), {
                Size = UDim2.new(1, 0, 0, 1),
                Position = UDim2.new(0, 0, 1, -1),
                Name = "Line",
                Visible = false
            }), "Stroke")
        }), {
            Size = UDim2.new(1, 0, 0, 38),
            ClipsDescendants = true,
            Name = "F"
        }),
        ColorpickerContainer,
        AddThemeObject(Create("UIStroke", {Thickness = 1}), "Stroke")
    }), "Second")

    local configKey = section.Name .. "_" .. ColorpickerConfig.Name .. "_Colorpicker"
    if _G.XyloKitUI.Config[configKey] then
        Colorpicker.Value = UnpackColor(_G.XyloKitUI.Config[configKey])
        ColorpickerBox.BackgroundColor3 = Colorpicker.Value
    end

    local Mouse = Players.LocalPlayer:GetMouse()
    local ColorInput, HueInput

    local function UpdateColorPicker()
        ColorpickerBox.BackgroundColor3 = Color3.fromHSV(ColorH, ColorS, ColorV)
        Color.BackgroundColor3 = Color3.fromHSV(ColorH, 1, 1)
        Colorpicker:Set(ColorpickerBox.BackgroundColor3)
        ColorpickerConfig.Callback(ColorpickerBox.BackgroundColor3)
        if ColorpickerConfig.Save then
            _G.XyloKitUI.Config[configKey] = PackColor(ColorpickerBox.BackgroundColor3)
            _G.XyloKitUI.SaveConfig()
        end
    end

    ColorH = 1 - (math.clamp(HueSelection.AbsolutePosition.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) / Hue.AbsoluteSize.Y)
    ColorS = (math.clamp(ColorSelection.AbsolutePosition.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) / Color.AbsoluteSize.X)
    ColorV = 1 - (math.clamp(ColorSelection.AbsolutePosition.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) / Color.AbsoluteSize.Y)

    local connection1 = Color.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            if ColorInput then
                ColorInput:Disconnect()
            end
            ColorInput = RunService.RenderStepped:Connect(function()
                local ColorX = (math.clamp(Mouse.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) / Color.AbsoluteSize.X)
                local ColorY = (math.clamp(Mouse.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) / Color.AbsoluteSize.Y)
                ColorSelection.Position = UDim2.new(ColorX, 0, ColorY, 0)
                ColorS = ColorX
                ColorV = 1 - ColorY
                UpdateColorPicker()
            end)
        end
    end)

    local connection2 = Color.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            if ColorInput then
                ColorInput:Disconnect()
            end
        end
    end)

    local connection3 = Hue.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            if HueInput then
                HueInput:Disconnect()
            end
            HueInput = RunService.RenderStepped:Connect(function()
                local HueY = (math.clamp(Mouse.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) / Hue.AbsoluteSize.Y)
                HueSelection.Position = UDim2.new(0.5, 0, HueY, 0)
                ColorH = 1 - HueY
                UpdateColorPicker()
            end)
        end
    end)

    local connection4 = Hue.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            if HueInput then
                HueInput:Disconnect()
            end
        end
    end)

    local connection5 = Click.MouseButton1Click:Connect(function()
        Colorpicker.Toggled = not Colorpicker.Toggled
        TweenService:Create(ColorpickerFrame, TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = Colorpicker.Toggled and UDim2.new(1, 0, 0, 148) or UDim2.new(1, 0, 0, 38)}):Play()
        Color.Visible = Colorpicker.Toggled
        Hue.Visible = Colorpicker.Toggled
        ColorpickerFrame.F.Line.Visible = Colorpicker.Toggled
    end)

    function Colorpicker:Set(Value)
        Colorpicker.Value = Value
        ColorpickerBox.BackgroundColor3 = Colorpicker.Value
        ColorpickerConfig.Callback(Colorpicker.Value)
        if ColorpickerConfig.Save then
            _G.XyloKitUI.Config[configKey] = PackColor(Colorpicker.Value)
            _G.XyloKitUI.SaveConfig()
        end
    end

    Colorpicker:Set(Colorpicker.Value)
    if ColorpickerConfig.Flag then
        _G.XyloKitUI.Flags = _G.XyloKitUI.Flags or {}
        _G.XyloKitUI.Flags[ColorpickerConfig.Flag] = Colorpicker
    end

    return Colorpicker
end

return CreateColorpicker
